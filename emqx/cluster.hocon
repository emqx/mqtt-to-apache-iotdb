bridges {
  iotdb {
    save-iem-data {
      authentication {password = root, username = root}
      base_url = "http://iotdb:18080"
      connect_timeout = 15s
      device_id = "root.iem.${payload.device_id}"
      enable = true
      enable_pipelining = 100
      iotdb_version = v1.1.x
      is_aligned = true
      max_retries = 2
      pool_size = 8
      pool_type = random
      resource_opts {
        health_check_interval = 15s
        inflight_window = 100
        max_buffer_bytes = 256MB
        query_mode = async
        request_ttl = 45s
        start_after_created = true
        start_timeout = 5s
        worker_pool_size = 16
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = 5s
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_peer
        versions = [tlsv1.3, tlsv1.2]
      }
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = 10s
  rules {
    save-iem-data {
      actions = ["iotdb:save-iem-data"]
      description = ""
      enable = true
      metadata {created_at = 1690791975099}
      name = ""
      sql = "FOREACH\n  jq('.values | to_entries[] | {device_id: .key, m: .key, value: .value, data_type: \"FLOAT\"}', payload) as p\nDO\n  p.m as payload.measurement,\n  str(p.value) as payload.value,\n  'FLOAT' as payload.data_type,\n  clientid as payload.device_id\nFROM\n  \"mqttx/simulate/IEM/+\""
    }
  }
}
